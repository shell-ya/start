<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.starnft.star.infrastructure.mapper.user.StarNftUserThemeMapper">
    <resultMap id="BaseResultMap" type="com.starnft.star.infrastructure.entity.user.StarNftUserTheme">
        <!--@mbg.generated-->
        <!--@Table star_nft_user_theme-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="series_theme_info_id" jdbcType="BIGINT" property="seriesThemeInfoId"/>
        <result column="series_theme_id" jdbcType="BIGINT" property="seriesThemeId"/>
        <result column="series_id" jdbcType="BIGINT" property="seriesId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="source" jdbcType="INTEGER" property="source"/>
        <result column="pre_tax_price" jdbcType="DECIMAL" property="preTaxPrice"/>
        <result column="platform_tax" jdbcType="DECIMAL" property="platformTax"/>
        <result column="copyright_tax" jdbcType="DECIMAL" property="copyrightTax"/>
        <result column="after_tax_price" jdbcType="DECIMAL" property="afterTaxPrice"/>
        <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="is_delete" jdbcType="BOOLEAN" property="isDelete"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,series_id, series_theme_info_id, series_theme_id, `status`, user_id, `source`, pre_tax_price,
        platform_tax, copyright_tax, after_tax_price, create_at, create_by, update_at, update_by,
        is_delete
    </sql>


    <select id="selectUserThemeToSeriesByUserId"
            resultType="com.starnft.star.domain.article.model.vo.UserSeriesVO">
        SELECT s.series_name   AS series_name,
               u.series_id     AS series_id,
               s.series_images AS series_images,
               COUNT(1)        AS nums,
               snp.publisher   AS publisher_name,
               snp.pic         AS publisher_pic
        FROM star_nft_user_theme u
                 LEFT JOIN star_nft_series s ON u.series_id = s.id
                 LEFT JOIN star_nft_publisher snp ON s.publisher_id = snp.id
        WHERE u.user_id = #{userId}
          AND u.`status` = #{status}
          AND u.source = #{themeType}
          AND u.is_delete = 0
        GROUP BY u.series_id
    </select>

    <select id="selectUserThemeToThemeByUserId" resultType="com.starnft.star.domain.article.model.vo.UserThemeVO">
        SELECT t.theme_name           AS theme_name,
               u.series_theme_info_id AS theme_id,
               t.theme_pic            AS theme_images,
               COUNT(1)               AS nums,
               snp.publisher          AS publisher_name,
               snp.pic                AS publisher_pic
        FROM star_nft_user_theme u
                 LEFT JOIN star_nft_theme_info t ON u.series_theme_info_id = t.id
                 LEFT JOIN star_nft_publisher snp ON t.publisher_id = snp.id
        WHERE u.user_id = #{userId}
          AND u.`status` = #{status}
          AND u.source = #{themeType}
          AND u.series_id = #{seriesId}
          AND u.is_delete = 0
        GROUP BY u.series_theme_info_id
    </select>

    <select id="selectUserThemeToNumbersByUserId" resultType="com.starnft.star.domain.article.model.vo.UserNumbersVO">
        SELECT t.theme_name           AS theme_name,
               n.id                   AS number_id,
               n.theme_number         AS theme_number,
               u.series_theme_info_id AS theme_id,
               u.pre_tax_price        AS price,
               t.theme_pic            AS theme_images
        FROM star_nft_user_theme u
                 LEFT JOIN star_nft_theme_info t ON u.series_theme_info_id = t.id
                 LEFT JOIN star_nft_theme_number n ON u.series_theme_id = n.id
        WHERE u.user_id = #{userId}
          AND u.`status` = #{status}
          AND u.source = #{themeType}
          AND u.series_theme_info_id = #{themeId}
          AND u.is_delete = 0
    </select>

    <update id="updateUserThemeMapping">
        UPDATE star_nft_user_theme
        SET status  = #{status}
        WHERE series_id = #{seriesId}
          AND series_theme_info_id = #{seriesThemeInfoId}
          AND series_theme_id = #{seriesThemeId}
          AND status = 1
          AND user_id = #{beforeUserId}
    </update>

    <select id="queryUserArticleNumberInfoByThemeIds"
            resultType="com.starnft.star.domain.article.model.vo.UserNumbersVO">

        SELECT t.theme_name           AS theme_name,
        n.id                   AS number_id,
        n.theme_number         AS theme_number,
        u.series_theme_info_id AS theme_id,
        u.pre_tax_price        AS price,
        t.theme_pic            AS theme_images
        FROM star_nft_user_theme u
        LEFT JOIN star_nft_theme_info t ON u.series_theme_info_id = t.id
        LEFT JOIN star_nft_theme_number n ON u.series_theme_id = n.id
        WHERE u.user_id = #{uid}
        AND u.`status` = #{statusEnum.code}
        AND u.is_delete = 0
        <foreach collection="themeIds" item="id" open="AND u.series_theme_id  in(" separator="," close=")">
            #{id}
        </foreach>
    </select>
</mapper>
