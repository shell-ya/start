<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.starnft.star.infrastructure.mapper.activity.StarScheduleSeckillMapper">
    <resultMap type="com.starnft.star.infrastructure.entity.activity.StarScheduleSeckill" id="StarScheduleSeckillMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="DATE"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="modifiedAt" column="modified_at" jdbcType="DATE"/>
        <result property="modifiedBy" column="modified_by" jdbcType="VARCHAR"/>
        <result property="sellerId" column="seller_id" jdbcType="BIGINT"/>
        <result property="spuId" column="spu_id" jdbcType="BIGINT"/>
        <result property="skuId" column="sku_id" jdbcType="BIGINT"/>
        <result property="stock" column="stock" jdbcType="INTEGER"/>
        <result property="goodsNum" column="goods_num" jdbcType="INTEGER"/>
        <result property="secCost" column="sec_cost" jdbcType="DECIMAL"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <result property="goodsDesc" column="goods_desc" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
    </resultMap>

    <!--分页查询指定行数据-->
    <select id="obtainActivities" resultMap="StarScheduleSeckillMap">
        select
        id,is_deleted,created_at,created_by,modified_at,modified_by,seller_id,spu_id,sku_id,stock,goods_num,sec_cost,start_time,end_time,goods_desc,status,version
        from star_schedule_seckill
        <where>
            status = 1
            and stock &gt; 0
            and goods_num &gt; 0
            <if test="startTime != null and startTime != ''">
                and start_time &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and end_time &lt;= #{endTime}
            </if>
            <if test="keys != null and keys.size > 0">
                and spu_id NOT IN
                (
                <foreach collection="keys" item="key" separator=",">
                    #{key}
                </foreach>
                )
            </if>
        </where>
    </select>

    <select id="queryByThemeId" resultMap="StarScheduleSeckillMap">
        select
        id,is_deleted,created_at,created_by,modified_at,modified_by,seller_id,spu_id,sku_id,stock,goods_num,sec_cost,start_time,end_time,goods_desc,status,version
        from star_schedule_seckill
        <where>
            spu_id = #{themeId}
        </where>
    </select>

    <update id="modifyStock" parameterType="com.starnft.star.infrastructure.entity.activity.StarScheduleSeckill">
        update star_schedule_seckill
        <set>
            <if test="stock != null and stock >= 0">
                stock = #{stock},
            </if>
            <if test="version != null ">
                version = #{version} + 1,
            </if>
        </set>
        where
        spu_id = #{themeId}
        and version = #{version}
    </update>

    <update id="frozenStock" parameterType="com.starnft.star.infrastructure.entity.activity.StarScheduleSeckill">
        update star_schedule_seckill
        <set>
            <if test="stock != null and stock >= 0">
                stock = #{stock},
            </if>
            <if test="stock != null and stock >= 0">
                frozen_stock = frozen_stock + 1,
            </if>
            <if test="version != null ">
                version = #{version} + 1,
            </if>
        </set>
        where
        spu_id = #{themeId}
        and version = #{version}
    </update>

    <!-- 批量新增或按主键更新数据 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        star_schedule_seckill(id,is_deleted,created_at,created_by,modified_at,modified_by,seller_id,spu_id,sku_id,stock,goods_num,sec_cost,start_time,end_time,goods_desc,status,version)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id},#{entity.isDeleted},#{entity.createdAt},#{entity.createdBy},#{entity.modifiedAt},#{entity.modifiedBy},#{entity.sellerId},#{entity.spuId},#{entity.skuId},#{entity.stock},#{entity.goodsNum},#{entity.secCost},#{entity.startTime},#{entity.endTime},#{entity.goodsDesc},#{entity.status},#{version})
        </foreach>
        on duplicate key update
        id=values(id),
        is_deleted=values(is_deleted),
        created_at=values(created_at),
        created_by=values(created_by),
        modified_at=values(modified_at),
        modified_by=values(modified_by),
        seller_id=values(seller_id),
        spu_id=values(spu_id),
        sku_id=values(sku_id),
        stock=values(stock),
        goods_num=values(goods_num),
        sec_cost=values(sec_cost),
        start_time=values(start_time),
        end_time=values(end_time),
        goods_desc=values(goods_desc),
        status=values(status)
        version=values(version)
    </insert>
</mapper>
