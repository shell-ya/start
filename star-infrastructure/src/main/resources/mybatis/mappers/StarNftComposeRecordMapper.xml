<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.starnft.star.infrastructure.mapper.compose.StarNftComposeRecordMapper">
  <resultMap id="BaseResultMap" type="com.starnft.star.infrastructure.entity.compose.StarNftComposeRecord">
    <!--@mbg.generated-->
    <!--@Table star_nft_compose_record-->
    <id column="id" property="id" />
    <result column="user_id" property="userId" />
    <result column="compose_id" property="composeId" />
    <result column="category_id" property="categoryId" />
    <result column="source" property="source" />
    <result column="is_scope" property="isScope" />
    <result column="scope_number" property="scopeNumber" />
    <result column="prize_type" property="prizeType" />
    <result column="prize_message" property="prizeMessage" />
    <result column="created_at" property="createdAt" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, compose_id, category_id, `source`, is_scope, scope_number, prize_type, 
    prize_message, created_at
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update star_nft_compose_record
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.userId}
        </foreach>
      </trim>
      <trim prefix="compose_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.composeId}
        </foreach>
      </trim>
      <trim prefix="category_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.categoryId}
        </foreach>
      </trim>
      <trim prefix="`source` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.source}
        </foreach>
      </trim>
      <trim prefix="is_scope = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.isScope}
        </foreach>
      </trim>
      <trim prefix="scope_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.scopeNumber}
        </foreach>
      </trim>
      <trim prefix="prize_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.prizeType}
        </foreach>
      </trim>
      <trim prefix="prize_message = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.prizeMessage}
        </foreach>
      </trim>
      <trim prefix="created_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createdAt}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update star_nft_compose_record
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id} then #{item.userId}
          </if>
        </foreach>
      </trim>
      <trim prefix="compose_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.composeId != null">
            when id = #{item.id} then #{item.composeId}
          </if>
        </foreach>
      </trim>
      <trim prefix="category_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.categoryId != null">
            when id = #{item.id} then #{item.categoryId}
          </if>
        </foreach>
      </trim>
      <trim prefix="`source` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.source != null">
            when id = #{item.id} then #{item.source}
          </if>
        </foreach>
      </trim>
      <trim prefix="is_scope = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.isScope != null">
            when id = #{item.id} then #{item.isScope}
          </if>
        </foreach>
      </trim>
      <trim prefix="scope_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.scopeNumber != null">
            when id = #{item.id} then #{item.scopeNumber}
          </if>
        </foreach>
      </trim>
      <trim prefix="prize_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.prizeType != null">
            when id = #{item.id} then #{item.prizeType}
          </if>
        </foreach>
      </trim>
      <trim prefix="prize_message = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.prizeMessage != null">
            when id = #{item.id} then #{item.prizeMessage}
          </if>
        </foreach>
      </trim>
      <trim prefix="created_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createdAt != null">
            when id = #{item.id} then #{item.createdAt}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into star_nft_compose_record
    (id, user_id, compose_id, category_id, `source`, is_scope, scope_number, prize_type, 
      prize_message, created_at)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id}, #{item.userId}, #{item.composeId}, #{item.categoryId}, #{item.source}, 
        #{item.isScope}, #{item.scopeNumber}, #{item.prizeType}, #{item.prizeMessage}, 
        #{item.createdAt})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.starnft.star.infrastructure.entity.compose.StarNftComposeRecord">
    <!--@mbg.generated-->
    insert into star_nft_compose_record
    (id, user_id, compose_id, category_id, `source`, is_scope, scope_number, prize_type, 
      prize_message, created_at)
    values
    (#{id}, #{userId}, #{composeId}, #{categoryId}, #{source}, #{isScope}, #{scopeNumber}, 
      #{prizeType}, #{prizeMessage}, #{createdAt})
    on duplicate key update 
    id = #{id}, 
    user_id = #{userId}, 
    compose_id = #{composeId}, 
    category_id = #{categoryId}, 
    `source` = #{source}, 
    is_scope = #{isScope}, 
    scope_number = #{scopeNumber}, 
    prize_type = #{prizeType}, 
    prize_message = #{prizeMessage}, 
    created_at = #{createdAt}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.starnft.star.infrastructure.entity.compose.StarNftComposeRecord">
    <!--@mbg.generated-->
    insert into star_nft_compose_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="composeId != null">
        compose_id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="source != null">
        `source`,
      </if>
      <if test="isScope != null">
        is_scope,
      </if>
      <if test="scopeNumber != null">
        scope_number,
      </if>
      <if test="prizeType != null">
        prize_type,
      </if>
      <if test="prizeMessage != null">
        prize_message,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="userId != null">
        #{userId},
      </if>
      <if test="composeId != null">
        #{composeId},
      </if>
      <if test="categoryId != null">
        #{categoryId},
      </if>
      <if test="source != null">
        #{source},
      </if>
      <if test="isScope != null">
        #{isScope},
      </if>
      <if test="scopeNumber != null">
        #{scopeNumber},
      </if>
      <if test="prizeType != null">
        #{prizeType},
      </if>
      <if test="prizeMessage != null">
        #{prizeMessage},
      </if>
      <if test="createdAt != null">
        #{createdAt},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="userId != null">
        user_id = #{userId},
      </if>
      <if test="composeId != null">
        compose_id = #{composeId},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId},
      </if>
      <if test="source != null">
        `source` = #{source},
      </if>
      <if test="isScope != null">
        is_scope = #{isScope},
      </if>
      <if test="scopeNumber != null">
        scope_number = #{scopeNumber},
      </if>
      <if test="prizeType != null">
        prize_type = #{prizeType},
      </if>
      <if test="prizeMessage != null">
        prize_message = #{prizeMessage},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt},
      </if>
    </trim>
  </insert>
</mapper>